name: Run Playwright Tests for the Framework

on:
  workflow_dispatch:
    inputs:
      browser:
        description: 'Select browser'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - webkit
          - firefox
      app:
        description: 'Select app name'
        required: true
        default: 'toolshop'
        type: choice
        options:
          - toolshop
          - autoexec
      test_type:
        description: 'Select test type'
        required: true
        default: 'Smoke'
        type: choice
        options:
          - Smoke
          - Regression

jobs:
  Regression:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Dependencies
        run: npm ci

      - name: Install Selected Playwright Browser(${{ github.event.inputs.browser }})
        run: npx playwright install ${{ github.event.inputs.browser }} --with-deps

      - name: Run Playwright Tests
        env:
          BROWSER: ${{ github.event.inputs.browser }}
          APP: ${{ github.event.inputs.app }}
          TEST_TYPE: ${{ github.event.inputs.test_type }}
        run: |
          echo "Running tests for $APP with $BROWSER ($TEST_TYPE)"
          # npx playwright test --project=$BROWSER --grep "$TEST_TYPE" --config=playwright.config.ts
          npx playwright test --project=$BROWSER

      - name: Read Summary Report to Get Test Results
        if: always()
        run: |
          PASSED=$(jq -r '.stats.expected' outputs/test-results.json)
          echo "PASSED=$PASSED" >> $GITHUB_ENV 
          FAILURES=$(jq -r '.stats.unexpected' outputs/test-results.json)
          echo "FAILURES=$FAILURES" >> $GITHUB_ENV
          FLAKY=$(jq -r '.stats.flaky' outputs/test-results.json)
          echo "FLAKY=$FLAKY" >> $GITHUB_ENV
          SKIPPED=$(jq -r '.stats.skipped' outputs/test-results.json)
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
          TOTAL=$((PASSED + FAILURES + FLAKY + SKIPPED))
          echo "TOTAL=$TOTAL" >> $GITHUB_ENV

      - name: Generate Images
        if: ${{ env.TOTAL != '' }}
        run: npm run test:images
        env:
          npm_config_PASSED: ${{ env.PASSED }}
          npm_config_FAILED: ${{ env.FAILURES }}
          npm_config_FLAKY: ${{ env.FLAKY }}
          npm_config_SKIPPED: ${{ env.SKIPPED }}
          npm_config_TOTAL: ${{ env.TOTAL }}

      - name: Upload Test Results Chart
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-chart
          path: test-results.png

      - name: Display Test Results Link
        if: always()
        run: |
          echo "::notice::Test Results Chart is available at: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          echo "Summary: Total:${{ env.TOTAL }} | ✅ Passed:${{ env.PASSED }} | ❌ Failed:${{ env.FAILURES }} | ⚠️ Flaky:${{ env.FLAKY }} | ⏭️ Skipped:${{ env.SKIPPED }}"          

      - name: Archive Build Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: HTML-Report
          path: ${{ github.workspace }}/html-report